$date
	Sat Jan 30 21:15:18 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test_sumador_4bits $end
$var wire 5 ! Suma [4:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$scope module s4bits $end
$var wire 4 $ A [3:0] $end
$var wire 4 % B [3:0] $end
$var wire 1 & Ci $end
$var wire 4 ' S [3:0] $end
$var wire 1 ( Co $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module sc0 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 & Cin $end
$var wire 1 + Cout $end
$var wire 1 . S $end
$var wire 1 / P $end
$var wire 1 0 H $end
$var wire 1 1 G $end
$scope module ms1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 1 Cout $end
$var wire 1 / S $end
$upscope $end
$scope module ms2 $end
$var wire 1 / A $end
$var wire 1 & B $end
$var wire 1 0 Cout $end
$var wire 1 . S $end
$upscope $end
$upscope $end
$scope module sc1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 & Cin $end
$var wire 1 * Cout $end
$var wire 1 4 S $end
$var wire 1 5 P $end
$var wire 1 6 H $end
$var wire 1 7 G $end
$scope module ms1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 7 Cout $end
$var wire 1 5 S $end
$upscope $end
$scope module ms2 $end
$var wire 1 5 A $end
$var wire 1 & B $end
$var wire 1 6 Cout $end
$var wire 1 4 S $end
$upscope $end
$upscope $end
$scope module sc2 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 & Cin $end
$var wire 1 ) Cout $end
$var wire 1 : S $end
$var wire 1 ; P $end
$var wire 1 < H $end
$var wire 1 = G $end
$scope module ms1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 = Cout $end
$var wire 1 ; S $end
$upscope $end
$scope module ms2 $end
$var wire 1 ; A $end
$var wire 1 & B $end
$var wire 1 < Cout $end
$var wire 1 : S $end
$upscope $end
$upscope $end
$scope module sc3 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 & Cin $end
$var wire 1 ( Cout $end
$var wire 1 @ S $end
$var wire 1 A P $end
$var wire 1 B H $end
$var wire 1 C G $end
$scope module ms1 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 C Cout $end
$var wire 1 A S $end
$upscope $end
$scope module ms2 $end
$var wire 1 A A $end
$var wire 1 & B $end
$var wire 1 B Cout $end
$var wire 1 @ S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
0&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#25
1.
b11 !
b11 '
14
1/
15
1-
12
b1 #
b1 %
b10 "
b10 $
#50
0.
1@
b1110 !
b1110 '
1:
0/
1A
1;
0-
13
1?
02
18
b1010 #
b1010 %
b100 "
b100 $
#75
04
1*
0:
b0 '
0@
b10000 !
1(
05
17
0;
0A
1C
12
08
1>
b1010 "
b1010 $
#100
b0 !
0(
0C
0?
0>
b10 #
b10 %
b10 "
b10 $
#125
1+
1)
b10000 !
1(
11
1=
1C
1-
19
1?
1,
18
1>
b1111 #
b1111 %
b1111 "
b1111 $
#250
